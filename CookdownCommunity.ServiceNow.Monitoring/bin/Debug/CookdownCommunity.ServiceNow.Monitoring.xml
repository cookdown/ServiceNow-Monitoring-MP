<?xml version="1.0" encoding="utf-8"?><ManagementPack xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" ContentReadable="true" SchemaVersion="2.0" OriginalSchemaVersion="2.0">
  <Manifest>
    <Identity>
      <ID>CookdownCommunity.ServiceNow.Monitoring</ID>
      <Version>1.0.0.6</Version>
    </Identity>
    <Name>CookdownCommunity.ServiceNow.Monitoring</Name>
    <References>
      <Reference Alias="MSDL">
        <ID>Microsoft.SystemCenter.DataWarehouse.Library</ID>
        <Version>7.1.10226.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="MSSL">
        <ID>Microsoft.SystemCenter.SyntheticTransactions.Library</ID>
        <Version>7.1.10226.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Perf">
        <ID>System.Performance.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" Accessibility="Internal" Abstract="false" Base="System!System.Service" Hosted="false" Singleton="false" Extension="false">
          <Property ID="URL" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Name" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Type" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Version" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="DatabaseVersion" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Build" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Offering" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="POPStatus" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="SMTPStatus" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
        </ClassType>
        <ClassType ID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" Accessibility="Internal" Abstract="false" Base="System!System.ApplicationComponent" Hosted="true" Singleton="false" Extension="false">
          <Property ID="NodeId" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="SystemId" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="CreatedOn" Type="datetime" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="AllowInbound" Type="bool" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="ReadyToFailover" Type="bool" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
        </ClassType>
        <ClassType ID="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" Accessibility="Internal" Abstract="false" Base="System!System.Perspective" Hosted="true" Singleton="false" Extension="false">
          <Property ID="Instance" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="InstanceUrlBase" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Location" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
        </ClassType>
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="CookdownCommunity.ServiceNow.Monitoring.ComputerHostsWatcher" Accessibility="Internal" Abstract="false" Base="System!System.Hosting">
          <Source ID="Source" MinCardinality="0" MaxCardinality="2147483647" Type="Windows!Microsoft.Windows.Computer" />
          <Target ID="Target" MinCardinality="0" MaxCardinality="2147483647" Type="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" />
        </RelationshipType>
        <RelationshipType ID="CookdownCommunity.ServiceNow.Monitoring.InstanceContainsWatchers" Accessibility="Internal" Abstract="false" Base="System!System.Containment">
          <Source ID="Source" MinCardinality="0" MaxCardinality="2147483647" Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" />
          <Target ID="Target" MinCardinality="0" MaxCardinality="2147483647" Type="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" />
        </RelationshipType>
        <RelationshipType ID="CookdownCommunity.ServiceNow.Monitoring.InstanceHostsNodes" Accessibility="Internal" Abstract="false" Base="System!System.Hosting">
          <Source ID="Source" MinCardinality="0" MaxCardinality="2147483647" Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" />
          <Target ID="Target" MinCardinality="0" MaxCardinality="2147483647" Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <SecureReferences>
      <SecureReference ID="CookdownCommunity.ServiceNow.Monitoring.APIProbeAccount" Accessibility="Public" Context="System!System.Entity" />
    </SecureReferences>
    <ModuleTypes>
      <DataSourceModuleType ID="CookdownCommunity.ServiceNow.Monitoring.DiscoverServiceNow" Accessibility="Internal" Batching="false">
        <Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SourceID" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ManagedEntityID" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="LocationName" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="InstanceUrls" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="ComputerName" type="xsd:string" /></Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="LocationName" Selector="$Config/LocationName$" ParameterType="string" />
          <OverrideableParameter ID="InstanceUrls" Selector="$Config/InstanceUrls$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="PSDisco" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider"><IntervalSeconds>43200</IntervalSeconds><SyncTime /><ScriptName>DiscoverServiceNowMonitoring.ps1</ScriptName><ScriptBody>#Bring in our parameters
param($sourceID, $managedEntityID, $location, $instanceUrls, $computerName, $snowUserName, $snowPassword)

Function CreateHeaders
{
	param($username, $password)
	# Build auth header
	$base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f $username, $password)))

	# Set proper headers
	$headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
	$headers.Add('Authorization',('Basic {0}' -f $base64AuthInfo))
	$headers.Add('Accept','application/json')
	$headers
}

Function GetClusterStatusFromServiceNow
{
    param($instanceURL)
    $statsEndpoint = $instanceURL + "api/now/table/sys_cluster_state"
    $results = Invoke-RESTMethod -Uri $statsEndpoint -Headers $headers -Method GET
    $results.result
}

Function CreateInstanceObject
{
    param($sourceNode,$sourceURL)

    $stats = [xml]$sourceNode.stats
    $instance = $discoveryData.CreateClassInstance("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']$")
    $instance.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']/URL$", $sourceURL)
    $instance.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']/Name$", $Stats.xmlstats.instance_name)
    $instance.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']/Type$", $Stats.xmlstats.instance_type)
    $instance.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']/Version$", $Stats.xmlstats.'glide.build.name')
    $instance.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']/Build$", $Stats.xmlstats.'glide.build.tag')
    $instance.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']/DatabaseVersion$", $stats.xmlstats.'db.product_version')
    $instance.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']/Offering$", $Stats.xmlstats.'glide.offering')
    $instance.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']/POPStatus$", $stats.xmlstats.'glide.pop3.status'.InnerText)
    $instance.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']/SMTPStatus$", $stats.xmlstats.'glide.smtp.status'.InnerText)
	$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $Stats.xmlstats.instance_name)
    $instance
}

Function CreateNodeObject
{
    param($sourceNode,$sourceURL)

    $stats = [xml]$sourceNode.stats
    $node = $discoveryData.CreateClassInstance("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode']$")
    $node.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance']/URL$", $sourceURL)
    $node.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode']/NodeId$", $sourceNode.node_id)
    $node.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode']/SystemId$", $sourceNode.system_id)
    $node.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode']/CreatedOn$", $sourceNode.sys_created_on)
    $node.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode']/AllowInbound$", $sourceNode.allow_inbound)
    $node.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode']/ReadyToFailover$", $sourceNode.ready_to_failover)
	$node.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $sourceNode.system_id)
    $node
}

Function CreateWatcherNode
{
    param($computerName,$sourceURL)
    $watcherNode = $discoveryData.CreateClassInstance("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.WatcherNode']$")
    $watcherNode.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)
    $watcherNode.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.WatcherNode']/Instance$", $sourceURL)
	$watcherNode.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.WatcherNode']/InstanceUrlBase$", $sourceURL.Replace("https://","").Replace("/",""))
    $watcherNode.AddProperty("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.WatcherNode']/Location$", $location)
	$watcherNode.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $location)
    $watcherNode
}

Function CreateWatcherRelationship
{
    param($instanceObject,$watcherObject)
    $watcherRelationship = $discoveryData.CreateRelationshipInstance("$MPElement[Name='CookdownCommunity.ServiceNow.Monitoring.InstanceContainsWatchers']$")
    $watcherRelationship.Source = $instanceObject
    $watcherRelationship.Target = $watcherObject
    $watcherRelationship
}

#Initialize the Object and create a discovery data unique to this Agent
$api = New-Object -comObject 'MOM.ScriptAPI'
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

$discoveryData = $api.CreateDiscoveryData(0, $sourceID, $managedEntityID)
$headers = CreateHeaders -username $snowUserName -password $snowPassword



foreach($instance in $instanceUrls.Trim().Split(","))
{
	$api.LogScriptEvent("SNOW Discovery", 1033, 4, $("working on cluster {0}." -f $instance))    
	$instance = $instance.Trim().ToLower()
    $clusterNodes = GetClusterStatusFromServiceNow -instanceURL $instance
	$api.LogScriptEvent("SNOW Discovery", 1033, 4, $("retrieved cluster nodes count = {0}" -f $clusterNodes.count))    
    # Discover instance
    $serviceNowInstance = CreateInstanceObject -sourceNode $clusterNodes[0] -sourceURL $instance
    $discoveryData.AddInstance($serviceNowInstance)
	
    #Add watcher
    $watcherNode = CreateWatcherNode -computerName $computerName -sourceURL $instance
    $discoveryData.AddInstance($watcherNode)
	
    #Relate watcher to instance
    $watcherRelationship = CreateWatcherRelationship -instanceObject $serviceNowInstance -watcherObject $watcherNode
    $discoveryData.AddInstance($watcherRelationship)
	
    #Add Nodes
    foreach($snowNode in $clusterNodes)
    {
        $node = CreateNodeObject -sourceNode $snowNode -sourceURL $instance
        $discoveryData.AddInstance($node)
		$api.LogScriptEvent("SNOW Discovery", 1011, 4, $("Created node {0}" -f $snowNode.system_id))
    }
}

$api.LogScriptEvent("SNOW Discovery", 1011, 4, $("Discovery Completed"))
$discoveryData</ScriptBody><Parameters><Parameter><Name>sourceID</Name><Value>$Config/SourceID$</Value></Parameter><Parameter><Name>managedEntityID</Name><Value>$Config/ManagedEntityID$</Value></Parameter><Parameter><Name>location</Name><Value>$Config/LocationName$</Value></Parameter><Parameter><Name>instanceUrls</Name><Value>$Config/InstanceUrls$</Value></Parameter><Parameter><Name>computerName</Name><Value>$Config/ComputerName$</Value></Parameter><Parameter><Name>snowUserName</Name><Value>$RunAs[Name="CookdownCommunity.ServiceNow.Monitoring.APIProbeAccount"]/UserName$</Value></Parameter><Parameter><Name>snowPassword</Name><Value>$RunAs[Name="CookdownCommunity.ServiceNow.Monitoring.APIProbeAccount"]/Password$</Value></Parameter></Parameters><TimeoutSeconds>600</TimeoutSeconds></DataSource>
            </MemberModules>
            <Composition>
              <Node ID="PSDisco" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Discovery.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="CookdownCommunity.ServiceNow.Monitoring.TCPPortCheckDataSource" Accessibility="Internal" Batching="false">
        <Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="InstanceUrlBase" type="xsd:string" /></Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Scheduler"><Scheduler><SimpleReccuringSchedule><Interval Unit="Seconds">240</Interval></SimpleReccuringSchedule><ExcludeDates /></Scheduler></DataSource>
              <ProbeAction ID="Probe" TypeID="MSSL!Microsoft.SystemCenter.SyntheticTransactions.TCPPortCheckProbe"><ServerName>$Config/InstanceUrlBase$</ServerName><Port>443</Port></ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Probe">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>MSSL!Microsoft.SystemCenter.SyntheticTransactions.TCPPortCheckData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="CookdownCommunity.ServiceNow.Monitoring.FetchStatusDataSource" Accessibility="Internal" Batching="false">
        <Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="InstanceURL" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SnowUsername" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SnowPassword" type="xsd:string" /></Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="StatusTimer" TypeID="System!System.SimpleScheduler"><IntervalSeconds>300</IntervalSeconds><SyncTime /></DataSource>
              <ProbeAction ID="GetStatusBags" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe"><ScriptName>ServiceNowStatusProbe.ps1</ScriptName><ScriptBody>#Bring in our parameters
param($instanceURL, $SnowUsername, $SnowPassword)

Function CreateHeaders
{
	param($username, $password)
	# Build auth header
	$base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f $username, $password)))

	# Set proper headers
	$headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
	$headers.Add('Authorization',('Basic {0}' -f $base64AuthInfo))
	$headers.Add('Accept','application/json')
	$headers
}

Function MakeAddPerfPropertyBag
{
  param(
    [string] $InstanceURL,
    [string] $NodeId,
    [string] $Object = "",
    [string] $Instance = "",
    [string] $Counter = "",
    [double] $Value = $null
    )
    
  if ($Value -ne $null) 
  {
    if ($Value -ne '')
       {  
		  $perfBag = $oAPI.CreatePropertyBag()
		  $perfBag.AddValue("Type","Performance")
		  $perfBag.AddValue("InstanceURL",$InstanceURL)
		  $perfBag.AddValue("NodeId",$NodeId)
		  $perfBag.AddValue("Object",$Object)
		  $perfBag.AddValue("Instance",$Instance)
		  $perfBag.AddValue("Counter",$Counter)
		  $perfBag.AddValue("Value",$Value)
		  $perfBag
       }
  }
}

Function MakeMonitoringStatusPropertyBag
{
	param(
		[string] $InstanceURL,
		[bool] $Success
	)

		$perfBag = $oAPI.CreatePropertyBag()
		$perfBag.AddValue("Type","Monitoring")
		$perfBag.AddValue("InstanceURL",$InstanceURL)
		$perfBag.AddValue("Success",$Success.ToString())
		$perfBag
}

Function GetClusterStatusFromServiceNow
{
    param($instanceURL)
    $statsEndpoint = $instanceURL + "api/now/table/sys_cluster_state"
    $results = Invoke-RESTMethod -Uri $statsEndpoint -Headers $headers -Method GET
    $results.result
}

Function CreatePerformancePropertyBags
{
    param($node, $instance)
    $ioStats = [xml]$node.iostats
    $stats = [xml]$node.stats

	$glidePool = $ioStats.xmlstats.iostats.pool | ? {$_.name -eq 'glide'}    

	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Memory" -Counter "Total" -Instance $node.system_id -Value $stats.xmlstats.'system.memory.total'
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Memory" -Counter "In Use" -Instance $node.system_id -Value $stats.xmlstats.'system.memory.in.use'
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Memory" -Counter "Percent Free" -Instance $node.system_id -Value $stats.xmlstats.'system.memory.pct.free'
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Memory" -Counter "Max" -Instance $node.system_id -Value $stats.xmlstats.'system.memory.max'.InnerText

	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Servlet" -Counter "Cache Flushes" -Instance $node.system_id -Value $stats.xmlstats.'servlet.cache.flushes'             
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Servlet" -Counter "Uptime" -Instance $node.system_id -Value $stats.xmlstats.'servlet.uptime'                    
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Servlet" -Counter "Transactions" -Instance $node.system_id -Value $stats.xmlstats.'servlet.transactions'              
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Servlet" -Counter "Errors Handled" -Instance $node.system_id -Value $stats.xmlstats.'servlet.errors.handled'            
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Servlet" -Counter "Processor Transactions" -Instance $node.system_id -Value $stats.xmlstats.'servlet.processor.transactions'    
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Servlet" -Counter "Cancelled Transactions" -Instance $node.system_id -Value $stats.xmlstats.'servlet.cancelled.transactions'    
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Servlet" -Counter "Active Sessions" -Instance $node.system_id -Value $stats.xmlstats.'servlet.active.sessions' 
          
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Scheduler" -Counter "Worker Count" -Instance $node.system_id -Value $stats.xmlstats.'scheduler.worker.count'            
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Scheduler" -Counter "Queue Length" -Instance $node.system_id -Value $stats.xmlstats.'scheduler.queue.length'            
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Scheduler" -Counter "Mean Queue Age" -Instance $node.system_id -Value $stats.xmlstats.'scheduler.mean.queue.age'          
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Scheduler" -Counter "Total Jobs" -Instance $node.system_id -Value $stats.xmlstats.'scheduler.total.jobs'              
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Scheduler" -Counter "Total Burst Workers" -Instance $node.system_id -Value $stats.xmlstats.'scheduler.total.burst.workers'

	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Glide Pool DB" -Counter "Selects" -Instance $node.system_id -Value $glidePool.select
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Glide Pool DB" -Counter "Selects (Over 1 Second)" -Instance $node.system_id -Value $glidePool.select_onesec
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Glide Pool DB" -Counter "Selects (Over 10 Sec)" -Instance $node.system_id -Value $glidePool.select_tensec
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Glide Pool DB" -Counter "Deletes" -Instance $node.system_id -Value $glidePool.delete
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Glide Pool DB" -Counter "Inserts" -Instance $node.system_id -Value $glidePool.insert
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Glide Pool DB" -Counter "Updates" -Instance $node.system_id -Value $glidePool.update

	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "JVM" -Counter "Classes Loaded" -Instance $node.system_id -Value $stats.xmlstats.'jvm.classes.loaded'
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "JVM" -Counter "Classes Unloaded" -Instance $node.system_id -Value $stats.xmlstats.'jvm.classes.unloaded'

	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Users" -Counter "End Users" -Instance $node.system_id -Value $stats.xmlstats.sessionsummary.end_user
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Users" -Counter "Logged In" -Instance $node.system_id -Value $stats.xmlstats.sessionsummary.logged_in
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId $node.node_id -Object "Users" -Counter "Total" -Instance $node.system_id -Value $stats.xmlstats.sessionsummary.total
}


try
{
	$oAPI = New-Object -comObject 'MOM.ScriptAPI'
	$oAPI.LogScriptEvent("SNOW Performance", 1050, 4, $("Collecting performance for {0}" -f $InstanceURL))
	[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
    $headers = CreateHeaders -username $SnowUsername -password $SnowPassword
    $fetchTime = Measure-Command {$clusterNodes = GetClusterStatusFromServiceNow -instanceURL $instanceURL}

	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId "NONE" -Object "Connection" -Counter "Fetch Time (MS)" -Instance "Total" -Value $fetchTime.TotalMilliseconds

	# Setup our roll-up Performance
	$instanceTotal_select = 0
	$instanceTotal_select_onesec = 0
	$instanceTotal_select_tensec = 0
	$instanceTotal_delete = 0
	$instanceTotal_insert = 0
	$instanceTotal_update = 0
	$instanceTotal_end_user = 0
	$instanceTotal_logged_in = 0
	$instanceTotal_total = 0

    foreach($snowNode in $clusterNodes)
    {
        CreatePerformancePropertyBags -node $snowNode -instance $instance

		# Update the node
		$ioStats = [xml]$snowNode.iostats
		$stats = [xml]$snowNode.stats
		$glidePoolData = $ioStats.xmlstats.iostats.pool | ? {$_.name -eq 'glide'}   
		$instanceTotal_select = $instanceTotal_select + $glidePoolData.select
		$instanceTotal_select_onesec = $instanceTotal_select_onesec + $glidePoolData.select_onesec
		$instanceTotal_select_tensec = $instanceTotal_select_tensec + $glidePoolData.select_tensec
		$instanceTotal_delete = $instanceTotal_delete + $glidePoolData.delete
		$instanceTotal_insert = $instanceTotal_insert + $glidePoolData.insert
		$instanceTotal_update = $instanceTotal_update + $glidePoolData.update
		$instanceTotal_end_user = $instanceTotal_end_user + $stats.xmlstats.sessionsummary.end_user
		$instanceTotal_logged_in = $instanceTotal_logged_in + $stats.xmlstats.sessionsummary.logged_in
		$instanceTotal_total = $instanceTotal_total + $stats.xmlstats.sessionsummary.total
    }

	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId "NONE" -Object "Glide Pool DB" -Counter "Selects" -Instance "Total"  -Value $instanceTotal_select
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId "NONE" -Object "Glide Pool DB" -Counter "Selects (Over 1 Second)" -Instance "Total" -Value $instanceTotal_select_onesec
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId "NONE" -Object "Glide Pool DB" -Counter "Selects (Over 10 Sec)" -Instance "Total" -Value $instanceTotal_select_tensec
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId "NONE" -Object "Glide Pool DB" -Counter "Deletes" -Instance "Total" -Value $instanceTotal_delete
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId "NONE" -Object "Glide Pool DB" -Counter "Inserts" -Instance "Total" -Value $instanceTotal_insert
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId "NONE" -Object "Glide Pool DB" -Counter "Updates" -Instance "Total" -Value $instanceTotal_update
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId "NONE" -Object "Users" -Counter "End Users" -Instance "Total" -Value $instanceTotal_end_user
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId "NONE" -Object "Users" -Counter "Logged In" -Instance "Total" -Value $instanceTotal_logged_in
	MakeAddPerfPropertyBag -InstanceUrl $instance -NodeId "NONE" -Object "Users" -Counter "Total" -Instance "Total" -Value $instanceTotal_total

    MakeMonitoringStatusPropertyBag -InstanceUrl -Success $true
}
catch
{
    MakeMonitoringStatusPropertyBag -InstanceUrl -Success $false
}
</ScriptBody><Parameters><Parameter><Name>InstanceURL</Name><Value>$Config/InstanceURL$</Value></Parameter><Parameter><Name>SnowUsername</Name><Value>$Config/SnowUsername$</Value></Parameter><Parameter><Name>SnowPassword</Name><Value>$Config/SnowPassword$</Value></Parameter></Parameters><TimeoutSeconds>120</TimeoutSeconds></ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="GetStatusBags">
                <Node ID="StatusTimer" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.BaseData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource" Accessibility="Internal" Batching="false">
        <Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="InstanceURL" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Object" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Counter" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="NodeId" type="xsd:string" /></Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="RunPowerShell" TypeID="CookdownCommunity.ServiceNow.Monitoring.FetchStatusDataSource"><InstanceURL>$Config/InstanceURL$</InstanceURL><SnowUsername>$RunAs[Name="CookdownCommunity.ServiceNow.Monitoring.APIProbeAccount"]/UserName$</SnowUsername><SnowPassword>$RunAs[Name="CookdownCommunity.ServiceNow.Monitoring.APIProbeAccount"]/Password$</SnowPassword></DataSource>
              <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter"><Expression><And><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Property[@Name='NodeId']</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value>$Config/NodeId$</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Property[@Name='Type']</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value>Performance</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Property[@Name='Object']</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value>$Config/Object$</Value></ValueExpression></SimpleExpression></Expression><Expression><SimpleExpression><ValueExpression><XPathQuery Type="String">Property[@Name='Counter']</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value>$Config/Counter$</Value></ValueExpression></SimpleExpression></Expression></And></Expression></ConditionDetection>
              <ConditionDetection ID="PerfMap" TypeID="Perf!System.Performance.DataGenericMapper"><ObjectName>$Data/Property[@Name='Object']$</ObjectName><CounterName>$Data/Property[@Name='Counter']$</CounterName><InstanceName>$Data/Property[@Name='Instance']$</InstanceName><Value>$Data/Property[@Name='Value']$</Value></ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="PerfMap">
                <Node ID="Filter">
                  <Node ID="RunPowerShell" />
                </Node>
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>Perf!System.Performance.Data</OutputType>
      </DataSourceModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="CookdownCommunity.ServiceNow.Monitoring.PerformanceThreshold" Accessibility="Internal">
        <MonitorTypeStates>
          <MonitorTypeState ID="UnderThreshold" NoDetection="false" />
          <MonitorTypeState ID="OverThreshold" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="InstanceURL" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Object" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Counter" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="NodeId" type="xsd:string" /><xsd:element xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Threshold" type="xsd:string" /></Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Threshold" Selector="$Config/Threshold$" ParameterType="string" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DataSource" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Config/InstanceURL$</InstanceURL><Object>$Config/Object$</Object><Counter>$Config/Counter$</Counter><NodeId>$Config/NodeId$</NodeId></DataSource>
            <ConditionDetection ID="UnderThresholdFilter" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>LessEqual</Operator><ValueExpression><Value Type="Double">$Config/Threshold$</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection>
            <ConditionDetection ID="OverThresholdFilter" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="Double">Value</XPathQuery></ValueExpression><Operator>Greater</Operator><ValueExpression><Value Type="Double">$Config/Threshold$</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="UnderThreshold">
              <Node ID="UnderThresholdFilter">
                <Node ID="DataSource" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="OverThreshold">
              <Node ID="OverThresholdFilter">
                <Node ID="DataSource" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOut" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="TimeOutFailure" NoDetection="false" />
          <MonitorTypeState ID="NoTimeOutFailure" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration />
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS1" TypeID="CookdownCommunity.ServiceNow.Monitoring.TCPPortCheckDataSource"><InstanceUrlBase>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.WatcherNode"]/InstanceUrlBase$</InstanceUrlBase></DataSource>
            <ConditionDetection ID="CDTimeOutFailure" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="UnsignedInteger">StatusCode</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="UnsignedInteger">2147952460</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection>
            <ConditionDetection ID="CDNoTimeOutFailure" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="UnsignedInteger">StatusCode</XPathQuery></ValueExpression><Operator>NotEqual</Operator><ValueExpression><Value Type="UnsignedInteger">2147952460</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="TimeOutFailure">
              <Node ID="CDTimeOutFailure">
                <Node ID="DS1" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="NoTimeOutFailure">
              <Node ID="CDNoTimeOutFailure">
                <Node ID="DS1" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefused" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="ConnectionRefusedFailure" NoDetection="false" />
          <MonitorTypeState ID="NoConnectionRefusedFailure" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration />
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS1" TypeID="CookdownCommunity.ServiceNow.Monitoring.TCPPortCheckDataSource"><InstanceUrlBase>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.WatcherNode"]/InstanceUrlBase$</InstanceUrlBase></DataSource>
            <ConditionDetection ID="CDConnectionRefusedFailure" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="UnsignedInteger">StatusCode</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="UnsignedInteger">2147952461</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection>
            <ConditionDetection ID="CDNoConnectionRefusedFailure" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="UnsignedInteger">StatusCode</XPathQuery></ValueExpression><Operator>NotEqual</Operator><ValueExpression><Value Type="UnsignedInteger">2147952461</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="ConnectionRefusedFailure">
              <Node ID="CDConnectionRefusedFailure">
                <Node ID="DS1" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="NoConnectionRefusedFailure">
              <Node ID="CDNoConnectionRefusedFailure">
                <Node ID="DS1" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolution" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="DNSResolutionFailure" NoDetection="false" />
          <MonitorTypeState ID="NoDNSResolutionFailure" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration />
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS1" TypeID="CookdownCommunity.ServiceNow.Monitoring.TCPPortCheckDataSource"><InstanceUrlBase>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.WatcherNode"]/InstanceUrlBase$</InstanceUrlBase></DataSource>
            <ConditionDetection ID="CDDNSResolutionFailure" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="UnsignedInteger">StatusCode</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="UnsignedInteger">2147953401</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection>
            <ConditionDetection ID="CDNoDNSResolutionFailure" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="UnsignedInteger">StatusCode</XPathQuery></ValueExpression><Operator>NotEqual</Operator><ValueExpression><Value Type="UnsignedInteger">2147953401</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="DNSResolutionFailure">
              <Node ID="CDDNSResolutionFailure">
                <Node ID="DS1" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="NoDNSResolutionFailure">
              <Node ID="CDNoDNSResolutionFailure">
                <Node ID="DS1" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
      <UnitMonitorType ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachable" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="HostUnreachableFailure" NoDetection="false" />
          <MonitorTypeState ID="NoHostUnreachableFailure" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration />
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS1" TypeID="CookdownCommunity.ServiceNow.Monitoring.TCPPortCheckDataSource"><InstanceUrlBase>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.WatcherNode"]/InstanceUrlBase$</InstanceUrlBase></DataSource>
            <ConditionDetection ID="CDHostUnreachableFailure" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="UnsignedInteger">StatusCode</XPathQuery></ValueExpression><Operator>Equal</Operator><ValueExpression><Value Type="UnsignedInteger">2147952465</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection>
            <ConditionDetection ID="CDNoHostUnreachableFailure" TypeID="System!System.ExpressionFilter"><Expression><SimpleExpression><ValueExpression><XPathQuery Type="UnsignedInteger">StatusCode</XPathQuery></ValueExpression><Operator>NotEqual</Operator><ValueExpression><Value Type="UnsignedInteger">2147952465</Value></ValueExpression></SimpleExpression></Expression></ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="HostUnreachableFailure">
              <Node ID="CDHostUnreachableFailure">
                <Node ID="DS1" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="NoHostUnreachableFailure">
              <Node ID="CDNoHostUnreachableFailure">
                <Node ID="DS1" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="CookdownCommunity.ServiceNow.Monitoring.DiscoveryWatchersAndInstances" Enabled="false" Target="Windows!Microsoft.Windows.Computer" ConfirmDelivery="false" Remotable="false" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" />
          <DiscoveryClass TypeID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" />
          <DiscoveryClass TypeID="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" />
          <DiscoveryRelationship TypeID="CookdownCommunity.ServiceNow.Monitoring.InstanceHostsNodes" />
          <DiscoveryRelationship TypeID="CookdownCommunity.ServiceNow.Monitoring.ComputerHostsWatcher" />
          <DiscoveryRelationship TypeID="CookdownCommunity.ServiceNow.Monitoring.InstanceContainsWatchers" />
        </DiscoveryTypes>
        <DataSource ID="DiscoverSnow" TypeID="CookdownCommunity.ServiceNow.Monitoring.DiscoverServiceNow"><SourceID>$MPElement$</SourceID><ManagedEntityID>$Target/Id$</ManagedEntityID><LocationName></LocationName><InstanceUrls></InstanceUrls><ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName></DataSource>
      </Discovery>
    </Discoveries>
    <Rules>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_Selects" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Selects</Counter><NodeId>NONE</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_SelectsOver1Second" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Selects (Over 1 Second)</Counter><NodeId>NONE</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Instance.FetchTime" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Connection</Object><Counter>Fetch Time (MS)</Counter><NodeId>NONE</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_SelectsOver10Seconds" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Selects (Over 10 Sec)</Counter><NodeId>NONE</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_Deletes" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Deletes</Counter><NodeId>NONE</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_Inserts" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Inserts</Counter><NodeId>NONE</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_Updates" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Updates</Counter><NodeId>NONE</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.Users_EndUsers" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Users</Object><Counter>End Users</Counter><NodeId>NONE</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.Users_LoggedIn" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Users</Object><Counter>Logged In</Counter><NodeId>NONE</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.Users_Total" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Users</Object><Counter>Total</Counter><NodeId>NONE</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Memory_InUse" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Memory</Object><Counter>In Use</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Memory_PercentFree" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Memory</Object><Counter>Percent Free</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Memory_Total" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Memory</Object><Counter>Total</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Memory_Max" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Memory</Object><Counter>Max</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_CacheFlushed" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Servlet</Object><Counter>Cache Flushes</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_Uptime" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Servlet</Object><Counter>Uptime</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_Transactions" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Servlet</Object><Counter>Transactions</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_ErrorsHandled" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Servlet</Object><Counter>Errors Handled</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_ProcessorTransactions" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Servlet</Object><Counter>Processor Transactions</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_CancelledTransactions" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Servlet</Object><Counter>Cancelled Transactions</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_ActiveSessions" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Servlet</Object><Counter>Active Sessions</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Scheduler_WorkerCount" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Scheduler</Object><Counter>Worker Count</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Scheduler_QueueLength" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Scheduler</Object><Counter>Queue Length</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Scheduler_MeanQueueAge" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Scheduler</Object><Counter>Mean Queue Age</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Scheduler_TotalJobs" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Scheduler</Object><Counter>Total Jobs</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Scheduler_TotalBurstWorkers" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Scheduler</Object><Counter>Total Burst Workers</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_Selects" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Selects</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_SelectsOver1Second" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Selects (Over 1 Second)</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_SelectsOver10Seconds" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Selects (Over 10 Sec)</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_Deletes" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Deletes</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_Inserts" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Inserts</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_Updates" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Glide Pool DB</Object><Counter>Updates</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.JVM_ClassesLoaded" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>JVM</Object><Counter>Classes Loaded</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.JVM_ClassesUnloaded" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>JVM</Object><Counter>Classes Unloaded</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Users_EndUsers" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Users</Object><Counter>End Users</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Users_LoggedIn" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Users</Object><Counter>Logged In</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.Performance.Users_Total" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="CookdownCommunity.ServiceNow.Monitoring.SnowPerformanceDataSource"><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Users</Object><Counter>Total</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId></DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionTime" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS1" TypeID="CookdownCommunity.ServiceNow.Monitoring.TCPPortCheckDataSource"><InstanceUrlBase>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.WatcherNode"]/InstanceUrlBase$</InstanceUrlBase></DataSource>
        </DataSources>
        <ConditionDetection ID="PerfMapper" TypeID="Perf!System.Performance.DataGenericMapper"><ObjectName>TCP Port Check</ObjectName><CounterName>Connection Time</CounterName><InstanceName>$Data/ServerName$:$Data/Port$</InstanceName><Value>$Data/ConnectionTime$</Value></ConditionDetection>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
    </Rules>
    <Monitors>
      <UnitMonitor ID="CookdownCommunity.ServiceNow.Monitoring.InstanceFetchTime" Accessibility="Internal" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="CookdownCommunity.ServiceNow.Monitoring.PerformanceThreshold" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <OperationalStates>
          <OperationalState ID="UnderThreshold" MonitorTypeStateID="UnderThreshold" HealthState="Success" />
          <OperationalState ID="OverThreshold" MonitorTypeStateID="OverThreshold" HealthState="Warning" />
        </OperationalStates>
        <Configuration><InstanceURL>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Connection</Object><Counter>Fetch Time (MS)</Counter><NodeId>NONE</NodeId><Threshold>3500</Threshold></Configuration>
      </UnitMonitor>
      <UnitMonitor ID="CookdownCommunity.ServiceNow.Monitoring.NodeMemoryUtilization" Accessibility="Internal" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="CookdownCommunity.ServiceNow.Monitoring.PerformanceThreshold" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="CookdownCommunity.ServiceNow.Monitoring.NodeMemoryUtilization.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="UnderThreshold" MonitorTypeStateID="UnderThreshold" HealthState="Success" />
          <OperationalState ID="OverThreshold" MonitorTypeStateID="OverThreshold" HealthState="Error" />
        </OperationalStates>
        <Configuration><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Memory</Object><Counter>Percent Free</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId><Threshold>90</Threshold></Configuration>
      </UnitMonitor>
      <UnitMonitor ID="CookdownCommunity.ServiceNow.Monitoring.NodeScheduleQueue" Accessibility="Internal" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="CookdownCommunity.ServiceNow.Monitoring.PerformanceThreshold" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <OperationalStates>
          <OperationalState ID="UnderThreshold" MonitorTypeStateID="UnderThreshold" HealthState="Success" />
          <OperationalState ID="OverThreshold" MonitorTypeStateID="OverThreshold" HealthState="Warning" />
        </OperationalStates>
        <Configuration><InstanceURL>$Target/Host/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance"]/URL$</InstanceURL><Object>Scheduler</Object><Counter>Queue Length</Counter><NodeId>$Target/Property[Type="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode"]/NodeId$</NodeId><Threshold>3</Threshold></Configuration>
      </UnitMonitor>
      <UnitMonitor ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOutMonitor" Accessibility="Public" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOut" ConfirmDelivery="false">
        <Category>PerformanceHealth</Category>
        <AlertSettings AlertMessage="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOutMonitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="OK" MonitorTypeStateID="NoTimeOutFailure" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="TimeOutFailure" HealthState="Error" />
        </OperationalStates>
        <Configuration />
      </UnitMonitor>
      <UnitMonitor ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefusedMonitor" Accessibility="Public" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefused" ConfirmDelivery="false">
        <Category>PerformanceHealth</Category>
        <AlertSettings AlertMessage="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefusedMonitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="OK" MonitorTypeStateID="NoConnectionRefusedFailure" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="ConnectionRefusedFailure" HealthState="Error" />
        </OperationalStates>
        <Configuration />
      </UnitMonitor>
      <UnitMonitor ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachableMonitor" Accessibility="Public" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachable" ConfirmDelivery="false">
        <Category>PerformanceHealth</Category>
        <AlertSettings AlertMessage="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachableMonitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="OK" MonitorTypeStateID="NoHostUnreachableFailure" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="HostUnreachableFailure" HealthState="Error" />
        </OperationalStates>
        <Configuration />
      </UnitMonitor>
      <UnitMonitor ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolutionMonitor" Accessibility="Public" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolution" ConfirmDelivery="false">
        <Category>PerformanceHealth</Category>
        <AlertSettings AlertMessage="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolutionMonitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="OK" MonitorTypeStateID="NoDNSResolutionFailure" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="DNSResolutionFailure" HealthState="Error" />
        </OperationalStates>
        <Configuration />
      </UnitMonitor>
      <DependencyMonitor ID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowPerformance" Accessibility="Internal" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="CookdownCommunity.ServiceNow.Monitoring.InstanceContainsWatchers" MemberMonitor="Health!System.Health.PerformanceState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
        <MemberUnAvailable>Warning</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowAvailabilty" Accessibility="Internal" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="CookdownCommunity.ServiceNow.Monitoring.InstanceContainsWatchers" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
        <MemberUnAvailable>Error</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNodePerformance" Accessibility="Internal" Enabled="true" Target="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="CookdownCommunity.ServiceNow.Monitoring.InstanceHostsNodes" MemberMonitor="Health!System.Health.PerformanceState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
        <MemberUnAvailable>Error</MemberUnAvailable>
      </DependencyMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <StringResources>
      <StringResource ID="CookdownCommunity.ServiceNow.Monitoring.NodeMemoryUtilization.AlertMessage" />
      <StringResource ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOutMonitor.AlertMessage" />
      <StringResource ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefusedMonitor.AlertMessage" />
      <StringResource ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachableMonitor.AlertMessage" />
      <StringResource ID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolutionMonitor.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance">
          <Name>ServiceNow Instance</Name>
          <Description>A Monitored ServiceNow Instance</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" SubElementID="URL">
          <Name>URL</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" SubElementID="Name">
          <Name>Name</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" SubElementID="Type">
          <Name>Instance Type</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" SubElementID="Version">
          <Name>Version</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" SubElementID="DatabaseVersion">
          <Name>Database Version</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" SubElementID="Build">
          <Name>Build</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" SubElementID="Offering">
          <Name>ServiceNow Offering</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" SubElementID="POPStatus">
          <Name>POP Status</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowInstance" SubElementID="SMTPStatus">
          <Name>SMTP Status</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode">
          <Name>ServiceNow Node</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" SubElementID="NodeId">
          <Name>Node ID</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" SubElementID="SystemId">
          <Name>System ID</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" SubElementID="CreatedOn">
          <Name>Created On</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" SubElementID="AllowInbound">
          <Name>Allow Inbound</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNode" SubElementID="ReadyToFailover">
          <Name>Ready for Failover?</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.WatcherNode">
          <Name>ServiceNow Watcher</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" SubElementID="Instance">
          <Name>Watching Instance</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" SubElementID="Location">
          <Name>Watcher Location</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.WatcherNode" SubElementID="InstanceUrlBase">
          <Name>Tested Base URL</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring">
          <Name>Cookdown Community ServiceNow Monitoring</Name>
          <Description>Cookdown open-source ServiceNow monitoring management pack, find updates and documentation from https://go.cookdown.com/servicenow-monitoring-mp</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowPerformance">
          <Name>Remote Performace</Name>
          <Description>Description for new dependency monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowNodePerformance">
          <Name>Node Performace</Name>
          <Description>Description for new dependency monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ServiceNowAvailabilty">
          <Name>Remote Availability</Name>
          <Description>Description for new dependency monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.InstanceFetchTime">
          <Name>Instance Data Fetch Time</Name>
          <Description>Monitors the speed at which ServiceNow responds to our queries for data.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.InstanceFetchTime" SubElementID="UnderThreshold">
          <Name>Fetch OK</Name>
          <Description>Fetch OK</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.InstanceFetchTime" SubElementID="OverThreshold">
          <Name>Fetch Slow</Name>
          <Description>Fetch Slow</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.NodeMemoryUtilization">
          <Name>Node Memory Utilization</Name>
          <Description>Monitors the percent memory usage on the ServiceNow nodes</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.NodeMemoryUtilization.AlertMessage">
          <Name>Memory usage high on ServiceNow Node</Name>
          <Description>The usage of memory on this Node if high.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.NodeMemoryUtilization" SubElementID="UnderThreshold">
          <Name>Memory OK</Name>
          <Description>Memory OK</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.NodeMemoryUtilization" SubElementID="OverThreshold">
          <Name>Memory High</Name>
          <Description>Memory High</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.NodeScheduleQueue">
          <Name>Scheduler Queue Length</Name>
          <Description>Monitors the Scheduler Queue length on ServiceNow nodes</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.NodeScheduleQueue" SubElementID="UnderThreshold">
          <Name>Queue OK</Name>
          <Description>Queue OK</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.NodeScheduleQueue" SubElementID="OverThreshold">
          <Name>Queue Long</Name>
          <Description>Queue Long</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOutMonitor">
          <Name>Connection Timeout</Name>
          <Description>A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOutMonitor.AlertMessage">
          <Name>Connection Timeout</Name>
          <Description>A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. ServerName: cookdowndev.service-now.com Port: 443</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolutionMonitor">
          <Name>DNS Resolution Failure</Name>
          <Description>Unable to resolve name to IP.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolutionMonitor.AlertMessage">
          <Name>DNS Resolution Failure</Name>
          <Description>Unable to resolve name to IP. ServerName: cookdowndev.service-now.com Port: 443</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachableMonitor">
          <Name>Host Unreachable</Name>
          <Description>A socket operation was attempted to an unreachable host.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachableMonitor.AlertMessage">
          <Name>Host Unreachable</Name>
          <Description>A socket operation was attempted to an unreachable host. ServerName: cookdowndev.service-now.com Port: 443</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefusedMonitor">
          <Name>Connection Refused</Name>
          <Description>No connection could be made because the target machine actively refused it.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefusedMonitor.AlertMessage">
          <Name>Connection Refused</Name>
          <Description>No connection could be made because the target machine actively refused it. ServerName: cookdowndev.service-now.com Port: 443</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOut">
          <Name>Connection Timeout</Name>
          <Description>This monitor type monitors for timeouts when attempting to connect to a port.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOut" SubElementID="TimeOutFailure">
          <Name>Timeout Failure (Error)</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOut" SubElementID="NoTimeOutFailure">
          <Name>No Timeout (Success)</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefused">
          <Name>Connection Refused</Name>
          <Description>This monitor type monitors being forcibly closed when attempting to connect to a port.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefused" SubElementID="ConnectionRefusedFailure">
          <Name>Connection Refused (Error)</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefused" SubElementID="NoConnectionRefusedFailure">
          <Name>Connection Accepted (Success)</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolution">
          <Name>DNS Resolution Failure</Name>
          <Description>This monitor type monitors any DNS resolution failure when attempting to connect to a port.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolution" SubElementID="DNSResolutionFailure">
          <Name>DNS Resolution Failure (Error)</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolution" SubElementID="NoDNSResolutionFailure">
          <Name>DNS Resolution Completed (Success)</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachable">
          <Name>Host Unreachable</Name>
          <Description>This monitor type monitors not being able to connect to a port.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachable" SubElementID="HostUnreachableFailure">
          <Name>Host Unreachable (Error)</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachable" SubElementID="NoHostUnreachableFailure">
          <Name>Host Reachable (Success)</Name>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_Selects">
          <Name>Collect Instance Performance (Glide Pool DB : Selects)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_SelectsOver1Second">
          <Name>Collect Instance Performance (Glide Pool DB : Selects (Over 1 Second))</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_SelectsOver10Seconds">
          <Name>Collect Instance Performance (Glide Pool DB : Selects (Over 10 Seconds))</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_Deletes">
          <Name>Collect Instance Performance (Glide Pool DB : Deletes)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_Inserts">
          <Name>Collect Instance Performance (Glide Pool DB : Inserts)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.GlidePoolDB_Updates">
          <Name>Collect Instance Performance (Glide Pool DB : Updates)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.Users_EndUsers">
          <Name>Collect Instance Performance (Users : End Users)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.Users_LoggedIn">
          <Name>Collect Instance Performance (Users : Logged In)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.InstanceTotal.Users_Total">
          <Name>Collect Instance Performance (Users : Total)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Memory_InUse">
          <Name>Collect Node Performance (Memory : In Use)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Memory_PercentFree">
          <Name>Collect Node Performance (Memory : Percent Free)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Memory_Total">
          <Name>Collect Node Performance (Memory : Total)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Memory_Max">
          <Name>Collect Node Performance (Memory : Max)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_CacheFlushed">
          <Name>Collect Node Performance (Servlet : Cache Flushes)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_Uptime">
          <Name>Collect Node Performance (Servlet : Uptime)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_Transactions">
          <Name>Collect Node Performance (Servlet : Transactions)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_ErrorsHandled">
          <Name>Collect Node Performance (Servlet : Errors Handled)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_ProcessorTransactions">
          <Name>Collect Node Performance (Servlet : Processor Transactions)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_CancelledTransactions">
          <Name>Collect Node Performance (Servlet : Cancelled Transactions)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Servlet_ActiveSessions">
          <Name>Collect Node Performance (Servlet : Active Sessions)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Scheduler_WorkerCount">
          <Name>Collect Node Performance (Scheduler : Worker Count)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Scheduler_QueueLength">
          <Name>Collect Node Performance (Scheduler : Queue Length)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Scheduler_MeanQueueAge">
          <Name>Collect Node Performance (Scheduler : Mean Queue Age)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Scheduler_TotalJobs">
          <Name>Collect Node Performance (Scheduler : Total Jobs)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Scheduler_TotalBurstWorkers">
          <Name>Collect Node Performance (Scheduler : Total Burst Workers)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_Selects">
          <Name>Collect Node Performance (Glide Pool DB : Selects)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_SelectsOver1Second">
          <Name>Collect Node Performance (Glide Pool DB : Selects (Over 1 Second))</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_SelectsOver10Seconds">
          <Name>Collect Node Performance (Glide Pool DB : Selects (Over 10 Seconds))</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_Deletes">
          <Name>Collect Node Performance (Glide Pool DB : Deletes)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_Inserts">
          <Name>Collect Node Performance (Glide Pool DB : Inserts)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.GlidePoolDB_Updates">
          <Name>Collect Node Performance (Glide Pool DB : Updates)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.JVM_ClassesLoaded">
          <Name>Collect Node Performance (JVM : Classes Loaded)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.JVM_ClassesUnloaded">
          <Name>Collect Node Performance (JVM : Classes Unloaded)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Users_EndUsers">
          <Name>Collect Node Performance (Users : End Users)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Users_LoggedIn">
          <Name>Collect Node Performance (Users : Logged In)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.Performance.Users_Total">
          <Name>Collect Node Performance (Users : Total)</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionTime">
          <Name>Test  SNOW instance TCP Port Connection Time Performance Collection</Name>
          <Description>This performance collection rule collects the time it takes to connect to cookdowndev.service-now.com on port 443.</Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.ComputerHostsWatcher">
          <Name>Computer Hosts ServiceNow Watcher</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.InstanceContainsWatchers">
          <Name>ServiceNow Instance Contains Watchers</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.InstanceHostsNodes">
          <Name>Instance Hosts Nodes</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="CookdownCommunity.ServiceNow.Monitoring.APIProbeAccount">
          <Name>Cookdown: ServiceNow Monitoring API Probe Account</Name>
          <Description>This account is used for pulling data from ServiceNow in discoveries as well as performance workflows</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles>
        <KnowledgeArticle ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.TimeOutMonitor" Visible="true">
          <MamlContent><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>Connecting to the target part timed out.</maml:para></maml:section><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This can happen for a few reasons:</maml:para><maml:para /><maml:list><maml:listItem><maml:para>The target computer is offline</maml:para></maml:listItem><maml:listItem><maml:para>There is a firewall between the watcher node and the target IP or device</maml:para></maml:listItem><maml:listItem><maml:para>IPSec is required between the watcher node and the target IP or device</maml:para></maml:listItem><maml:listItem><maml:para>The target IP:Port is actually not available</maml:para></maml:listItem></maml:list></maml:section><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>Try the following troubleshooting steps to attempt to fix the problem</maml:para><maml:para /><maml:list><maml:listItem><maml:para>Ping the target computer to ensure it's on the network</maml:para></maml:listItem><maml:listItem><maml:para>Telnet to the target IP:Port</maml:para><maml:para /><maml:example><maml:para>telnet x.x.x.x ####</maml:para></maml:example><maml:para /><maml:para>Where x.x.x.x. is the IP Address or device name and #### is the target port number.</maml:para></maml:listItem></maml:list></maml:section></MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.DNSResolutionMonitor" Visible="true">
          <MamlContent><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>Could not resolve the name supplied name through the watcher nodes Domain Name Service.</maml:para></maml:section><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This can happen for a few reasons:</maml:para><maml:para /><maml:list><maml:listItem><maml:para>The DNS client side cache has a stale entry</maml:para></maml:listItem><maml:listItem><maml:para>The DNS infrastructure not available</maml:para></maml:listItem><maml:listItem><maml:para>The watcher node DNS settings are out of date or incorrect</maml:para></maml:listItem><maml:listItem><maml:para>DNS has a stale entry for the supplied target name and is returning the wrong IP address</maml:para></maml:listItem></maml:list></maml:section><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>Try the following troubleshooting steps to attempt to fix the problem</maml:para><maml:para /><maml:list><maml:listItem><maml:para>On a Windows Computer, at the command line type:</maml:para><maml:para>ipconfig /flushdns</maml:para><maml:para /><maml:para>Then type:</maml:para><maml:para>ipconfig /registerdns</maml:para><maml:para /></maml:listItem><maml:listItem><maml:para>Check with your network or domain administrator if there is any problems with the DNS infrastructure that the watcher node is configured to use.</maml:para></maml:listItem><maml:listItem><maml:para>Check the IP Address that is being returned to ensure it is returning the actual device name you expect.</maml:para><maml:para>Do this by pinging by the device name you supplied in the wizard. Next take the IP Address and type ping -a [IPAddress]. For example, if the IP Address is 10.10.1.1:</maml:para><maml:example><maml:para>ping -a 10.10.1.1</maml:para></maml:example><maml:para /><maml:para>If the name returned is different than the name supplied in the wizard there are likely some name resolution issues related to having a misconfigured or stale DNS entry.</maml:para></maml:listItem></maml:list></maml:section></MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.HostUnreachableMonitor" Visible="true">
          <MamlContent><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>The target IP or device could not be reached</maml:para></maml:section><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This can happen for a few reasons:</maml:para><maml:para /><maml:list><maml:listItem><maml:para>The target computer is offline</maml:para></maml:listItem><maml:listItem><maml:para>The watcher node doesn't have the appropriate permissions</maml:para></maml:listItem><maml:listItem><maml:para>There may be a firewall between the watcher node and the target device</maml:para></maml:listItem></maml:list></maml:section><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>Try the following troubleshooting steps to attempt to fix the problem</maml:para><maml:para /><maml:list><maml:listItem><maml:para>Ping the target computer to ensure it's on the network</maml:para></maml:listItem><maml:listItem><maml:para>Ensure that the Run As account used by the watcher node has the appropriate permissions to the target data source</maml:para></maml:listItem><maml:listItem><maml:para>Check if the Windows Firewall is enabled on either the target machine or the watcher node. If it is, create an exclusion for the application you are monitoring.</maml:para></maml:listItem></maml:list></maml:section></MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="CookdownCommunity.ServiceNow.Monitoring.HttpsTCPPortTest.ConnectionRefusedMonitor" Visible="true">
          <MamlContent><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Summary</maml:title><maml:para>Connection is refused</maml:para></maml:section><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Causes</maml:title><maml:para>This can happen for a few reasons:</maml:para><maml:para /><maml:list><maml:listItem><maml:para>The watcher node doesn't have the appropriate permissions</maml:para></maml:listItem></maml:list></maml:section><maml:section xmlns="http://schemas.microsoft.com/maml/2004/10" xmlns:maml="http://schemas.microsoft.com/maml/2004/10"><maml:title>Resolutions</maml:title><maml:para>Try the following troubleshooting steps to attempt to fix the problem</maml:para><maml:para /><maml:list><maml:listItem><maml:para>Ensure that if IPSec is configured, that the machine can establish an IPSec connection</maml:para></maml:listItem><maml:listItem><maml:para>Telnet to the target IP:Port</maml:para><maml:para /><maml:example><maml:para>telnet x.x.x.x ####</maml:para></maml:example><maml:para /><maml:para>Where x.x.x.x. is the IP Address or device name and #### is the target port number.</maml:para></maml:listItem></maml:list></maml:section></MamlContent>
        </KnowledgeArticle>
      </KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>